{"version":3,"file":"main.js","mappings":"mBACO,SAASA,EAAQC,EAAMC,EAAUC,EAAMC,EAAMC,EAAQC,EAASC,EAASC,GAC5E,IAAMC,EAAOP,EAASQ,cAAc,SAASC,WAAU,GACjDC,EAAeH,EAAKC,cAAc,wBAClCG,EAAaJ,EAAKC,cAAc,sBAChCI,EAAQL,EAAKC,cAAc,gBA6BjC,OA1BAI,EAAMC,IAAMd,EAAKe,KACjBF,EAAMG,IAAMhB,EAAKiB,KACjBJ,EAAMK,iBAAiB,QAASf,GAGhCK,EAAKC,cAAc,gBAAgBU,YAAcnB,EAAKiB,KAGtDT,EAAKC,cAAc,uBAAuBU,YAAcnB,EAAKoB,MAAMC,OAGnET,EAAWM,iBAAiB,SAAS,kBAAMhB,EAAKF,EAAKsB,IAAKd,EAAMH,EAASC,EAAQ,IAG7EN,EAAKoB,MAAMC,OAAS,GAClBrB,EAAKoB,MAAMG,MAAM,SAAAC,GAAI,OAAIA,EAAKF,MAAQf,CAAO,KAC/CK,EAAWa,UAAUC,IAAI,+BAKzBnB,IAAYP,EAAK2B,MAAML,MACzBX,EAAaO,iBAAiB,SAAS,kBAAMd,EAAOJ,EAAKsB,IAAKd,EAAK,IACnEG,EAAac,UAAUC,IAAI,gCAGtBlB,CACT,CAGO,SAASoB,EAAUC,EAAIC,EAAUC,EAAYzB,GAClD,IAAMM,EAAakB,EAASrB,cAAc,sBACpCuB,EAAcF,EAASrB,cAAc,uBAEvCG,EAAWa,UAAUQ,SAAS,+BAChCF,EAAWF,GACRK,MAAK,SAACC,GACLH,EAAYb,YAAcgB,EAAIf,MAAMC,OACpCT,EAAWa,UAAUrB,OAAO,8BAC9B,IACCgC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAI,IAEhC/B,EAAQuB,GACLK,MAAK,SAACC,GACLH,EAAYb,YAAcgB,EAAIf,MAAMC,OACpCT,EAAWa,UAAUC,IAAI,8BAC3B,IAECU,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAI,GAEpC,CCzDA,SAASG,EAAaC,GACJ,WAAZA,EAAIC,KACNC,EAAWC,SAASnC,cAAc,oBAEtC,CAGO,SAASoC,EAAcJ,IACvBA,EAAIK,OAAOrB,UAAUQ,SAAS,UAAcQ,EAAIK,OAAOrB,UAAUQ,SAAS,kBAC7EU,EAAWF,EAAIK,OAAOC,QAAQ,UAElC,CAGO,SAASJ,EAAWK,GACzBJ,SAASK,oBAAoB,UAAWT,GACxCQ,EAAMvB,UAAUrB,OAAO,kBACzB,CAGO,SAAS8C,EAAUF,GACxBJ,SAAS1B,iBAAiB,UAAWsB,GACrCQ,EAAMvB,UAAUC,IAAI,kBACtB,CCvBA,IAOMyB,EAAoB,SAACC,EAAWC,EAAeC,IAP7B,SAACF,GACvB,OAAOA,EAAU7B,MAAK,SAACgC,GACrB,OAAQA,EAAaC,SAASC,KAChC,GACF,CAIMC,CAAgBN,IAIlBC,EAAc5B,UAAUrB,OAAOkD,EAAaK,qBAC5CN,EAAcO,UAAW,IAJzBP,EAAc5B,UAAUC,IAAI4B,EAAaK,qBACzCN,EAAcO,UAAW,EAK7B,EAGaC,EAAkB,SAACC,EAAaR,GAC3C,IAAMD,EAAgBS,EAAYrD,cAAc6C,EAAaS,sBAE7DV,EAAc5B,UAAUC,IAAI4B,EAAaK,qBACzCN,EAAcO,UAAW,EAEzBE,EAAYE,iBAAiBV,EAAaW,eAAeC,SAAQ,SAACX,GAChEA,EAAaY,kBAAkB,IAC/BC,EAAeN,EAAaP,EAAcD,EAC5C,GACF,EAWMc,EAAiB,SAACN,EAAaP,EAAcD,GACjD,IAAMe,EAAeP,EAAYrD,cAAc,WAAD6D,OAAYf,EAAatC,KAAI,WAC3EsC,EAAa9B,UAAUrB,OAAOkD,EAAaiB,iBAC3CF,EAAa5C,UAAUrB,OAAOkD,EAAakB,WAC7C,EC3CMC,EAAS,CACbC,QAAS,4CACTC,QAAS,CACPC,cAAe,uCACf,eAAgB,qBAKdC,EAAgB,SAAC1C,GACrB,OAAIA,EAAI2C,GACC3C,EAAI4C,OAEJC,QAAQC,OAAO,WAADX,OAAYnC,EAAI+C,QACtC,EAuDU5E,EAAU,SAAC6E,GACtB,OAAOC,MAAM,GAADd,OAAIG,EAAOC,QAAO,iBAAAJ,OAAgBa,GAAU,CACtDE,OAAQ,MACRV,QAASF,EAAOE,UAEjBzC,MAAK,SAAAC,GAAG,OAAI0C,EAAc1C,EAAI,GACjC,EAGaJ,EAAa,SAACoD,GACzB,OAAOC,MAAM,GAADd,OAAIG,EAAOC,QAAO,iBAAAJ,OAAgBa,GAAU,CACtDE,OAAQ,SACRV,QAASF,EAAOE,UAEjBzC,MAAK,SAAAC,GAAG,OAAI0C,EAAc1C,EAAI,GACjC,E,sGCzEA,IAgGKN,EAGDrB,EFjD6B8C,EElD3BgC,EAAe1C,SAASnC,cAAc,kBAAkB8E,QAGxDC,EAAa5C,SAASnC,cAAc,iBAKpCgF,EAAa7C,SAASnC,cAAc,yBAGpCiF,EAAY9C,SAASnC,cAAc,wBAGnCkF,EAAe/C,SAASnC,cAAc,mBAKtCmF,EAAYhD,SAASnC,cAAc,oBAGnCoF,EAAWjD,SAASnC,cAAc,wBAGlCqF,EAAalD,SAASnC,cAAc,qBAGpCI,EAAQiF,EAAWrF,cAAc,iBAGjCsF,EAAUD,EAAWrF,cAAc,mBAGnCuF,EAAcpD,SAASnC,cAAc,6BAGrCwF,EAAcrD,SAASnC,cAAc,+BAMrCyF,EAAcN,EAAUnF,cAAc,gBAGtC0F,EAAYD,EAAYzF,cAAc,iBAGtC2F,EAAWF,EAAYzF,cAAc,wBAKrC4F,EAAeR,EAASpF,cAAc,gBAGtC6F,EAAaD,EAAa5F,cAAc,uBAGxC8F,EAAYF,EAAa5F,cAAc,iBAKvC+F,EAAmBR,EAAYvF,cAAc,gBAG7CgG,EAAcD,EAAiB/F,cAAc,wBAI7CiG,EAAcT,EAAYxF,cAAc,gBAKxCkG,EAAmB,CACrBC,aAAc,eACd3C,cAAe,gBACfF,qBAAsB,iBACtBJ,oBAAqB,yBACrBY,gBAAiB,0BACjBC,WAAY,wBAIVqC,EAAejE,SAASnC,cAAc,mBAGtCqG,EAAqBlE,SAASnC,cAAc,yBAG5CsG,EAAenE,SAASnC,cAAc,mBAY5C,SAASuG,EAAWvE,GAClB5B,EAAMC,IAAM2B,EAAIK,OAAOhC,IACvBD,EAAMG,IAAMyB,EAAIK,OAAO9B,IACvB+E,EAAQ5E,YAAcsB,EAAIK,OAAO9B,IACjCkC,EAAU4C,EACZ,CAGA,SAASmB,EAAW9B,EAAQ+B,GAC1BrF,EAAKsD,EACL3E,EAAO0G,EACPhE,EAAU+C,EACZ,CAyEArD,SAASoB,iBAAiB,UAAUE,SAAQ,SAAC1C,GAC3CA,EAAKN,iBAAiB,QAAS2B,EACjC,IAGA4C,EAAWvE,iBAAiB,SAAS,WACnCiF,EAAUgB,MAAQN,EAAa1F,YAC/BiF,EAASe,MAAQL,EAAmB3F,YACpC0C,EAAgBqC,EAAaS,GAC7BzD,EAAU0C,EACZ,IAGAF,EAAUxE,iBAAiB,SAAS,WAClCgC,EAAU2C,EACZ,IAGAF,EAAazE,iBAAiB,SAAS,WACrCgC,EAAU8C,EACZ,IAGAE,EAAYhF,iBAAiB,UAlF7B,SAAuBuB,GACrBA,EAAI2E,iBACJ,ID9G+BC,EAAaC,EC8GtCC,EAAa9E,EAAIK,OAAOrC,cAAc,kBAC5C8G,EAAWpG,YAAc,iBD/GMkG,ECiHdlB,EAAUgB,MDjHiBG,ECiHVlB,EAASe,MDhHpC/B,MAAM,GAADd,OAAIG,EAAOC,QAAO,aAAa,CACzCW,OAAQ,QACRV,QAASF,EAAOE,QAChB6C,KAAMC,KAAKC,UAAU,CACnBzG,KAAMoG,EACNM,MAAOL,MAGVpF,MAAK,SAAAC,GAAG,OAAI0C,EAAc1C,EAAI,KCyG5BD,MAAK,SAACC,GACL0E,EAAa1F,YAAcgB,EAAIlB,KAC/B6F,EAAmB3F,YAAcgB,EAAIwF,MACrChF,EAAWiD,EACb,IACCxD,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAI,IAC7BuF,SAAQ,kBAAML,EAAWpG,YAAc,WAAW,GACrD,IAwEFkF,EAAanF,iBAAiB,UArE9B,SAAwBuB,GACtBA,EAAI2E,iBACJ,IDjH0BS,EAAUC,ECiH9BP,EAAa9E,EAAIK,OAAOrC,cAAc,kBAC5C8G,EAAWpG,YAAc,iBDlHC0G,ECoHdvB,EAAWa,MDpHaW,ECoHNvB,EAAUY,MDnHjC/B,MAAM,GAADd,OAAIG,EAAOC,QAAO,UAAU,CACtCW,OAAQ,OACRV,QAASF,EAAOE,QAChB6C,KAAMC,KAAKC,UAAU,CACnBzG,KAAM4G,EACN9G,KAAM+G,MAGT5F,MAAK,SAAAC,GAAG,OAAI0C,EAAc1C,EAAI,KC4G5BD,MAAK,SAACC,GACLqD,EAAWuC,QAAQhI,EAAQoC,EAAKmD,EAAc1D,EAAUoF,EAAWC,EAAYlF,EAAYzB,EAAS6B,EAAIR,MAAML,MAC9GgF,EAAWa,MAAQ,GACnBZ,EAAUY,MAAQ,GAClBxE,EAAWkD,GACXhC,EAAgBwC,EAAcM,EAChC,IACCvE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAI,IAC7BuF,SAAQ,kBAAML,EAAWpG,YAAc,WAAW,GACvD,IAyDAqF,EAAiBtF,iBAAiB,UAtDlC,SAA4BuB,GAC1BA,EAAI2E,iBACJ,ID/E2BY,EC+ErBT,EAAa9E,EAAIK,OAAOrC,cAAc,kBAC5C8G,EAAWpG,YAAc,iBDhFE6G,ECkFdvB,EAAYU,MDjFlB/B,MAAM,GAADd,OAAI0D,GAAa,CAC3B3C,OAAQ,SAETnD,MAAK,SAACC,GACL,OAAIA,EAAI2C,GACC3C,EAAIwC,QAAQsD,IAAI,gBAElBjD,QAAQC,OAAO,WAADX,OAAYnC,EAAI+C,QACvC,KC0EGhD,MAAK,SAACC,GD/FsB,IAAC+F,ECgGxB/F,EAAIgG,MAAM,WDhGcD,ECiGRzB,EAAYU,MDhG7B/B,MAAM,GAADd,OAAIG,EAAOC,QAAO,oBAAoB,CAChDW,OAAQ,QACRV,QAASF,EAAOE,QAChB6C,KAAMC,KAAKC,UAAU,CACnBU,OAAQF,MAGXhG,MAAK,SAAAC,GAAG,OAAI0C,EAAc1C,EAAI,KC0FtBD,MAAK,SAACC,GACL4E,EAAajG,IAAMqB,EAAIiG,OACvBzF,EAAWqD,EACb,IACC5D,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAI,IAE3BC,QAAQC,IAAI,yBACrB,IACCH,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAI,IAC7BuF,SAAQ,kBAAML,EAAWpG,YAAc,WAAW,GACvD,IAsCAuF,EAAYxF,iBAAiB,UAtG7B,SAAwBuB,GDvEE,IAAC0C,ECwEzB1C,EAAI2E,kBDxEqBjC,ECyEdtD,EDxEJuD,MAAM,GAADd,OAAIG,EAAOC,QAAO,WAAAJ,OAAUa,GAAU,CAChDE,OAAQ,SACRV,QAASF,EAAOE,UAEjBzC,MAAM,SAAAC,GAAG,OAAI0C,EAAc1C,EAAI,KCqE7BD,MAAK,WACJ1B,EAAKJ,SACLuC,EAAWsD,EACb,IACC7D,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAI,GAClC,IF9EiCiB,EE+KhBqD,EF9Kf/D,SAASoB,iBAAiBV,EAAasD,cAAc1C,SAAQ,SAACJ,GAC5D,IAAMV,EAAYiF,MAAMC,KAAKxE,EAAYE,iBAAiBV,EAAaW,gBACjEZ,EAAgBS,EAAYrD,cAAc6C,EAAaS,sBAE7DZ,EAAkBC,EAAWC,EAAeC,GAC5CF,EAAUc,SAAQ,SAACX,GACjBA,EAAarC,iBAAiB,SAAS,YAtBlB,SAAC4C,EAAaP,EAAcD,GACjDC,EAAaC,SAAS+E,gBACxBhF,EAAaY,kBAAkBZ,EAAaiF,QAAQC,cAEpDlF,EAAaY,kBAAkB,IAG5BZ,EAAaC,SAASC,MAGzBW,EAAeN,EAAaP,EAAcD,GAzBvB,SAACQ,EAAaP,EAAckF,EAAcnF,GAC/D,IAAMe,EAAeP,EAAYrD,cAAc,WAAD6D,OAAYf,EAAatC,KAAI,WAC3EsC,EAAa9B,UAAUC,IAAI4B,EAAaiB,iBACxCF,EAAalD,YAAcsH,EAC3BpE,EAAa5C,UAAUC,IAAI4B,EAAakB,WAC1C,CAkBIkE,CAAe5E,EAAaP,EAAcA,EAAaoF,kBAAmBrF,EAI9E,CAWQsF,CAAmB9E,EAAaP,EAAcD,GAC9CH,EAAkBC,EAAWC,EAAeC,EAC9C,GACF,GACF,IEsKF0B,QAAQ6D,IAAI,CD5NHzD,MAAM,GAADd,OAAIG,EAAOC,QAAO,aAAa,CACzCC,QAASF,EAAOE,UAEjBzC,MAAK,SAAAC,GAAG,OAAI0C,EAAc1C,EAAI,IAKxBiD,MAAM,GAADd,OAAIG,EAAOC,QAAO,UAAU,CACtCC,QAASF,EAAOE,UAEjBzC,MAAK,SAAAC,GAAG,OAAI0C,EAAc1C,EAAI,MCkN9BD,MAAK,SAAA4G,GAA8B,I,IAAAC,G,EAAA,E,4CAAAD,I,s1BAA5BE,EAAUD,EAAA,GAAEE,EAAUF,EAAA,GAC5BlC,EAAa1F,YAAc6H,EAAW/H,KACtC6F,EAAmB3F,YAAc6H,EAAWrB,MAC5CZ,EAAajG,IAAMkI,EAAWZ,OAE9Ba,EAAW/E,SAAQ,SAAC1C,GAClBgE,EAAW0D,OAAOnJ,EAAQyB,EAAM8D,EAAc1D,EAAUoF,EAAWC,EAAYlF,EAAYzB,EAAS0I,EAAW1H,KACjH,GACF,IACCc,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAI,G","sources":["webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/index.js"],"sourcesContent":["// @todo: Функция создания карточки\r\nexport function addCard(data, template, like, open, remove, delLike, putLike, user_id) {\r\n  const card = template.querySelector('.card').cloneNode(true);\r\n  const deleteButton = card.querySelector('.card__delete-button');\r\n  const likeButton = card.querySelector('.card__like-button');\r\n  const image = card.querySelector('.card__image');\r\n\r\n  // картинка\r\n  image.src = data.link;\r\n  image.alt = data.name;\r\n  image.addEventListener('click', open);\r\n\r\n  // название\r\n  card.querySelector('.card__title').textContent = data.name;\r\n\r\n  // количество лайков\r\n  card.querySelector('.card__like-counter').textContent = data.likes.length;\r\n\r\n  // слушатель на кнопку like\r\n  likeButton.addEventListener('click', () => like(data._id, card, delLike, putLike));\r\n  \r\n  // если мы лайкали карточку, меняем цвет кнопки\r\n  if (data.likes.length > 0) {\r\n    if (data.likes.some( item => item._id === user_id)) {\r\n      likeButton.classList.add('card__like-button_is-active');\r\n    }\r\n  }\r\n  \r\n  // если мы добавляли карточку, устанавливаем кнопку удаления\r\n  if (user_id === data.owner._id) {\r\n    deleteButton.addEventListener('click', () => remove(data._id, card));\r\n    deleteButton.classList.add('card__delete-button_visible');\r\n  }\r\n\r\n  return card;\r\n}\r\n\r\n// функция Like карточки\r\nexport function likeCard (id, listItem, deleteLike, putLike) {\r\n  const likeButton = listItem.querySelector('.card__like-button');\r\n  const likeCounter = listItem.querySelector('.card__like-counter');\r\n\r\n  if (likeButton.classList.contains('card__like-button_is-active')) {\r\n    deleteLike(id)\r\n      .then((res) => {\r\n        likeCounter.textContent = res.likes.length;\r\n        likeButton.classList.remove('card__like-button_is-active');\r\n      })\r\n      .catch(err => console.log(err));\r\n  } else {\r\n    putLike(id)\r\n      .then((res) => {\r\n        likeCounter.textContent = res.likes.length;\r\n        likeButton.classList.add('card__like-button_is-active');\r\n      })\r\n      \r\n      .catch(err => console.log(err));\r\n  }\r\n}\r\n","// функция закрытия попапа по нажатию Escape\r\nfunction closeEscape (evt) {\r\n  if (evt.key === 'Escape') {\r\n    closePopup(document.querySelector('.popup_is-opened'));\r\n  }\r\n}\r\n\r\n// функция закрытия попапа по клику на Overlay или кнопке X \r\nexport function closeOverlay (evt) {\r\n  if ((evt.target.classList.contains('popup')) || (evt.target.classList.contains('popup__close'))) {\r\n    closePopup(evt.target.closest('.popup'));  \r\n  }\r\n}\r\n\r\n// функция закрытия попапа\r\nexport function closePopup(popup) {\r\n  document.removeEventListener('keydown', closeEscape);\r\n  popup.classList.remove('popup_is-opened');\r\n}\r\n\r\n// функция открытия попапа\r\nexport function openPopup(popup) {\r\n  document.addEventListener('keydown', closeEscape);\r\n  popup.classList.add('popup_is-opened');\r\n}","// функция проверки валидности всех полей формы\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\n// функция изменения кнопки submit в зависимости от валидности полей формы \r\nconst toggleButtonState = (inputList, buttonElement, objectConfig) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.classList.add(objectConfig.inactiveButtonClass);\r\n    buttonElement.disabled = true;\r\n  } else {\r\n    buttonElement.classList.remove(objectConfig.inactiveButtonClass);\r\n    buttonElement.disabled = false;\r\n  }\r\n};\r\n\r\n// функция очистки значений прошлой валидации\r\nexport const clearValidation = (formElement, objectConfig) => {\r\n  const buttonElement = formElement.querySelector(objectConfig.submitButtonSelector);\r\n\r\n  buttonElement.classList.add(objectConfig.inactiveButtonClass);\r\n  buttonElement.disabled = true;\r\n\r\n  formElement.querySelectorAll(objectConfig.inputSelector).forEach((inputElement) => {\r\n    inputElement.setCustomValidity(\"\");\r\n    hideInputError(formElement, inputElement, objectConfig);  \r\n  });\r\n};\r\n\r\n// функция показывает сообщение, если поле невалидно\r\nconst showInputError = (formElement, inputElement, errorMessage, objectConfig) => {\r\n  const errorElement = formElement.querySelector(`.popup__${inputElement.name}-error`);\r\n  inputElement.classList.add(objectConfig.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(objectConfig.errorClass);\r\n};\r\n\r\n// функция скрывает ссобщение о невалидности поля\r\nconst hideInputError = (formElement, inputElement, objectConfig) => {\r\n  const errorElement = formElement.querySelector(`.popup__${inputElement.name}-error`);\r\n  inputElement.classList.remove(objectConfig.inputErrorClass);\r\n  errorElement.classList.remove(objectConfig.errorClass);\r\n};\r\n\r\n// функция проверки валидности поля\r\nconst checkInputValidity = (formElement, inputElement, objectConfig) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n  \r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, objectConfig);\r\n  } else {\r\n    hideInputError(formElement, inputElement, objectConfig);\r\n  }\r\n};\r\n\r\n// функция включения валидации\r\nexport const enableValidation = (objectConfig) => {\r\n  document.querySelectorAll(objectConfig.formSelector).forEach((formElement) => {\r\n    const inputList = Array.from(formElement.querySelectorAll(objectConfig.inputSelector));\r\n    const buttonElement = formElement.querySelector(objectConfig.submitButtonSelector);\r\n\r\n    toggleButtonState(inputList, buttonElement, objectConfig);\r\n    inputList.forEach((inputElement) => {\r\n      inputElement.addEventListener('input', function () {\r\n        checkInputValidity(formElement, inputElement, objectConfig);\r\n        toggleButtonState(inputList, buttonElement, objectConfig);\r\n      });\r\n    });\r\n  });\r\n};","// конфиг для сервера\r\nconst config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-18',\r\n  headers: {\r\n    authorization: 'e96418a6-cb14-4e7d-b86d-658948b4d0dc',\r\n    'Content-Type': 'application/json'\r\n  }\r\n}\r\n\r\n// функция проверки ответо  сервера\r\nconst checkResponse = (res) => { \r\n  if (res.ok) {\r\n    return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n   }\r\n\r\n\r\n// запрос с сервера данных профиля\r\nexport const getInitialUser = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers\r\n  })\r\n  .then(res => checkResponse(res))\r\n}\r\n\r\n// запрос сервера массива карточек\r\nexport const getInitialCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers\r\n  })\r\n  .then(res => checkResponse(res))\r\n}\r\n\r\n// Отправка на сервер отредактированного профиля\r\nexport const patchEditProfile = (nameProfile, aboutProfile) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: nameProfile,\r\n      about: aboutProfile\r\n    })\r\n  })\r\n  .then(res => checkResponse(res))\r\n}\r\n\r\n// Отправка на сервер новой карточки\r\nexport const postNewCard = (nameCard, linkCard) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: nameCard,\r\n      link: linkCard\r\n    })\r\n  })\r\n  .then(res => checkResponse(res))\r\n}\r\n\r\n// удаление с сервера карточки\r\nexport const deleteCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n  .then (res => checkResponse(res))\r\n}\r\n\r\n// отправка лайка карточки на сервер\r\nexport const putLike = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'PUT',\r\n    headers: config.headers\r\n  })\r\n  .then(res => checkResponse(res))\r\n}\r\n\r\n// удаление лайка карточки с сервера\r\nexport const deleteLike = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n  .then(res => checkResponse(res))\r\n}\r\n\r\n// Отправка на сервер новоый аватар\r\nexport const patchUpdateAvatar = (avatarLink) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: avatarLink\r\n    })\r\n  })\r\n  .then(res => checkResponse(res))\r\n}\r\n\r\n// проверка правильности URL изображения\r\nexport const headValidUrl = (linkImage) => {\r\n  return fetch(`${linkImage}`, {\r\n    method: 'HEAD'\r\n  })\r\n  .then((res) => {\r\n    if (res.ok) {\r\n      return res.headers.get('content-type')\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  })\r\n}","// -------------------------------- Import --------------------------------- //\r\n\r\nimport '../pages/index.css';\r\n\r\nimport { addCard, likeCard } from \"../components/card\";\r\nimport { openPopup, closePopup, closeOverlay} from \"../components/modal\";\r\nimport { enableValidation, clearValidation } from '../components/validation';\r\nimport { getInitialUser, getInitialCards, patchEditProfile, postNewCard, patchUpdateAvatar, headValidUrl, deleteCard, deleteLike, putLike } from '../components/api';\r\n\r\n// --------------------------------- ПР5 ----------------------------------- //\r\n\r\n// @todo: Темплейт карточки\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\n\r\n// @todo: DOM узлы\r\nconst placesList = document.querySelector('.places__list');\r\n\r\n// -------------------------------- Кнопки --------------------------------- //\r\n\r\n// кнопка Редактировать\r\nconst editButton = document.querySelector('.profile__edit-button');\r\n\r\n// кнопка Добавить(+)\r\nconst addButton = document.querySelector('.profile__add-button');\r\n\r\n// кнопка Обновить аватар\r\nconst updateButton = document.querySelector('.profile__image');\r\n\r\n// -------------------------------- Попапы --------------------------------- //\r\n\r\n// попап Редактировать\r\nconst editPopup = document.querySelector('.popup_type_edit');\r\n\r\n// попап Добавить\r\nconst addPopup = document.querySelector('.popup_type_new-card');\r\n\r\n// попап картинки\r\nconst imagePopup = document.querySelector('.popup_type_image');\r\n\r\n// картинка попапа\r\nconst image = imagePopup.querySelector('.popup__image');\r\n\r\n// описание картинка\r\nconst caption = imagePopup.querySelector('.popup__caption');\r\n\r\n// попап Обновить аватар\r\nconst updatePopup = document.querySelector('.popup_type_update-avatar');\r\n\r\n// попап Подтверждения удаления\r\nconst deletePopup = document.querySelector('.popup_type_question-delete');\r\n\r\n// -------------------------------- Формы ---------------------------------- //\r\n\r\n// -------------------- Форма \"Редактировать профиль\" ---------------------- //\r\n// сама форма\r\nconst formProfile = editPopup.querySelector('.popup__form');\r\n\r\n// поле Имя\r\nconst nameInput = formProfile.querySelector('[name=\"name\"]');\r\n\r\n// поле Работа \r\nconst jobInput = formProfile.querySelector('[name=\"description\"]');\r\n\r\n\r\n// ------------------------- Форма \"Новое место\" --------------------------- //\r\n// сама форма\r\nconst formNewPlace = addPopup.querySelector('.popup__form');\r\n\r\n// поле Название\r\nconst placeInput = formNewPlace.querySelector('[name=\"place-name\"]');\r\n\r\n// поле Ссылка\r\nconst linkInput = formNewPlace.querySelector('[name=\"link\"]');\r\n\r\n// ------------------------Форма \"Обновить аватар\" ------------------------- //\r\n\r\n// сама форма\r\nconst formUpdateAvatar = updatePopup.querySelector('.popup__form');\r\n\r\n// поле Ссылка\r\nconst updateInput = formUpdateAvatar.querySelector('[name=\"link-update\"]');\r\n\r\n// -------------------- Форма \"Подтверждение удаления\" --------------------- //\r\n\r\nconst formQestion = deletePopup.querySelector('.popup__form');\r\n\r\n// ------------------------------ Переменные ------------------------------- //\r\n\r\n// Объект настроек для валидации\r\nconst validationConfig = {\r\n    formSelector: '.popup__form',\r\n    inputSelector: '.popup__input',\r\n    submitButtonSelector: '.popup__button',\r\n    inactiveButtonClass: 'popup__button_disabled',\r\n    inputErrorClass: 'popup__input_type_error',\r\n    errorClass: 'popup__error_visible'\r\n};\r\n\r\n// элемент на странице, отображающий Имя\r\nconst profileTitle = document.querySelector('.profile__title');\r\n\r\n// элемент на странице, отображающий кем работает человек\r\nconst profileDescription = document.querySelector('.profile__description');\r\n\r\n// элемент на странице, отображающий фото профиля\r\nconst profileImage = document.querySelector('.profile__image');\r\n\r\n// переменная для хранения id карточки\r\nlet  id;\r\n\r\n// переменная для хранения удаляемой карточки\r\nlet card;\r\n\r\n\r\n// ------------------------------- Функции --------------------------------- //\r\n\r\n// функция открытия попапа с картинкой\r\nfunction openImage (evt) {\r\n  image.src = evt.target.src;\r\n  image.alt = evt.target.alt;\r\n  caption.textContent = evt.target.alt;\r\n  openPopup(imagePopup);\r\n}\r\n\r\n// функция удаления карточки\r\nfunction removeCard(cardId, deletion) {\r\n  id = cardId;\r\n  card = deletion;\r\n  openPopup(deletePopup);\r\n}\r\n\r\n// Колбэк кнопки Да, формы \"Подтверждение удаления\"\r\nfunction submitQestion (evt) {\r\n  evt.preventDefault(); \r\n  deleteCard(id)\r\n    .then(() => {\r\n      card.remove();\r\n      closePopup(deletePopup);\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\n// колбэк кнопки Сохранить, формы \"Редактировать профиль\"\r\nfunction submitProfile(evt) {\r\n  evt.preventDefault();\r\n  const saveButton = evt.target.querySelector('.popup__button');\r\n  saveButton.textContent = 'Сохранение...';\r\n  \r\n  patchEditProfile(nameInput.value, jobInput.value)\r\n    .then((res) => {\r\n      profileTitle.textContent = res.name;\r\n      profileDescription.textContent = res.about;\r\n      closePopup(editPopup);\r\n    })\r\n    .catch(err => console.log(err))\r\n    .finally(() => saveButton.textContent = 'Сохранить')\r\n  }\r\n\r\n// колбэк кнопки Сохранить, формы \"Новое место\"\r\nfunction submitNewPlace(evt) {\r\n  evt.preventDefault();\r\n  const saveButton = evt.target.querySelector('.popup__button');\r\n  saveButton.textContent = 'Сохранение...';\r\n\r\n  postNewCard(placeInput.value, linkInput.value)\r\n    .then((res) => {\r\n      placesList.prepend(addCard(res, cardTemplate, likeCard, openImage, removeCard, deleteLike, putLike, res.owner._id));\r\n      placeInput.value = '';\r\n      linkInput.value = '';\r\n      closePopup(addPopup);\r\n      clearValidation(formNewPlace, validationConfig);\r\n    })\r\n    .catch(err => console.log(err))\r\n    .finally(() => saveButton.textContent = 'Сохранить')\r\n}\r\n\r\n// колбэк кнопки Сохранить, формы \"Обновить аватар\"\r\nfunction submitUpdateAvatar(evt) {\r\n  evt.preventDefault();\r\n  const saveButton = evt.target.querySelector('.popup__button');\r\n  saveButton.textContent = 'Сохранение...';\r\n\r\n  headValidUrl(updateInput.value)\r\n    .then((res) => {\r\n      if (res.match(/^image/)) {\r\n        patchUpdateAvatar(updateInput.value)\r\n          .then((res) => {\r\n            profileImage.src = res.avatar;\r\n            closePopup(updatePopup);\r\n          })\r\n          .catch(err => console.log(err))\r\n\r\n      } else console.log('URL не прошёл проверку')\r\n    })\r\n    .catch(err => console.log(err))\r\n    .finally(() => saveButton.textContent = 'Сохранить')\r\n}\r\n\r\n\r\n// --------------------------------- Code ---------------------------------- //\r\n\r\n// добавления обработчика клика на каждый popup\r\ndocument.querySelectorAll('.popup').forEach((item) => {\r\n  item.addEventListener('click', closeOverlay);\r\n});\r\n\r\n// обработчик клика по кнопке Редактировать\r\neditButton.addEventListener('click', function() {\r\n  nameInput.value = profileTitle.textContent;\r\n  jobInput.value = profileDescription.textContent;\r\n  clearValidation(formProfile, validationConfig);\r\n  openPopup(editPopup);\r\n});\r\n\r\n// обработчик клика по кнопке + (Добавить)\r\naddButton.addEventListener('click', function() {\r\n  openPopup(addPopup);\r\n});\r\n\r\n// обработчик клика по изображению аватара\r\nupdateButton.addEventListener('click', function() {\r\n  openPopup(updatePopup);\r\n});\r\n\r\n// обработчик кнопки Сохранить, формы \"Редактировать профиль\"\r\nformProfile.addEventListener('submit', submitProfile);\r\n\r\n//обработчик кнопки Сохранить, формы \"Новое место\"\r\nformNewPlace.addEventListener('submit', submitNewPlace);\r\n\r\n//обработчик кнопки Сохранить, формы \"Обновить аватар\"\r\nformUpdateAvatar.addEventListener('submit', submitUpdateAvatar);\r\n\r\n// обработчик кнопки Да, формы \"Подтверждение удаления\"\r\nformQestion.addEventListener('submit', submitQestion);\r\n\r\n// включение валидации\r\nenableValidation(validationConfig); \r\n\r\n// Промис Инициализация пользователя и Вывод карточек с сервера\r\nPromise.all([getInitialUser(), getInitialCards()])\r\n  .then(([resultUser, resultCard]) => {\r\n    profileTitle.textContent = resultUser.name;\r\n    profileDescription.textContent = resultUser.about;\r\n    profileImage.src = resultUser.avatar;\r\n\r\n    resultCard.forEach((item) => {\r\n      placesList.append(addCard(item, cardTemplate, likeCard, openImage, removeCard, deleteLike, putLike, resultUser._id));\r\n    });\r\n  })\r\n  .catch(err => console.log(err));"],"names":["addCard","data","template","like","open","remove","delLike","putLike","user_id","card","querySelector","cloneNode","deleteButton","likeButton","image","src","link","alt","name","addEventListener","textContent","likes","length","_id","some","item","classList","add","owner","likeCard","id","listItem","deleteLike","likeCounter","contains","then","res","catch","err","console","log","closeEscape","evt","key","closePopup","document","closeOverlay","target","closest","popup","removeEventListener","openPopup","toggleButtonState","inputList","buttonElement","objectConfig","inputElement","validity","valid","hasInvalidInput","inactiveButtonClass","disabled","clearValidation","formElement","submitButtonSelector","querySelectorAll","inputSelector","forEach","setCustomValidity","hideInputError","errorElement","concat","inputErrorClass","errorClass","config","baseUrl","headers","authorization","checkResponse","ok","json","Promise","reject","status","cardId","fetch","method","cardTemplate","content","placesList","editButton","addButton","updateButton","editPopup","addPopup","imagePopup","caption","updatePopup","deletePopup","formProfile","nameInput","jobInput","formNewPlace","placeInput","linkInput","formUpdateAvatar","updateInput","formQestion","validationConfig","formSelector","profileTitle","profileDescription","profileImage","openImage","removeCard","deletion","value","preventDefault","nameProfile","aboutProfile","saveButton","body","JSON","stringify","about","finally","nameCard","linkCard","prepend","linkImage","get","avatarLink","match","avatar","Array","from","patternMismatch","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","all","_ref","_ref2","resultUser","resultCard","append"],"sourceRoot":""}